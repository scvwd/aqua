<?php

/**
 * @file
 * This is the External Links module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_modules_installed().
 */
function extlink_modules_installed($modules) {
  if (in_array('extlink', $modules)) {
    // Be friendly to your users: what to do after install?
    $url = Url::fromRoute('extlink_admin.settings');
    if (PHP_SAPI != 'cli') {
      \Drupal::messenger()->addMessage(t('You can now <a href="@extlink_admin">configure the External Links module</a> for your site.',
        ['@extlink_admin' => $url->toString()]), 'status');
    }
  }
}

/**
 * Implements hook_help().
 */
function extlink_help($route_name, RouteMatchInterface $arg) {
  switch ($route_name) {
    case 'help.page.extlink':
      $output = '';
      $output .= '<p>' . t('External Links is used to differentiate between internal and external links. Using jQuery, it will find all external links on a page and add an external icon indicating it will take you offsite or a mail icon for mailto links.') . '</p>';
      return ['#markup' => $output];
  }
}

/**
 * Implements hook_page_attachments().
 */
function extlink_page_attachments(array &$attachments) {
  $config = \Drupal::config('extlink.settings');
  $attachments['#attached']['library'][] = 'extlink/drupal.extlink';

  $settings = $config->getRawData();

  // Allow other modules to manipulate the settings.
  \Drupal::moduleHandler()->alter('extlink_settings', $settings);

  // Allow other modules to alter the excluded CSS selector settings.
  \Drupal::moduleHandler()->alter('extlink_css_exclude', $settings['extlink_css_exclude']);

  $callback = [Html::class, 'cleanCssIdentifier'];
  $fa_link_classes = $config->get('extlink_font_awesome_classes.links') ?: 'fa fa-external-link';
  $fa_link_classes = array_map($callback, explode(' ', $fa_link_classes));

  $fa_mailto_classes = $config->get('extlink_font_awesome_classes.mailto') ?: 'fa fa-envelope-o';
  $fa_mailto_classes = array_map($callback, explode(' ', $fa_mailto_classes));

  $attachments['#attached']['drupalSettings']['data']['extlink'] = [
    'extTarget'           => $settings['extlink_target'],
    'extTargetNoOverride' => $settings['extlink_target_no_override'],
    'extNofollow'         => $settings['extlink_nofollow'] ? $settings['extlink_nofollow'] : 0,
    'extFollowNoOverride' => $settings['extlink_follow_no_override'] ? $settings['extlink_follow_no_override'] : 0,
    'extClass'            => $settings['extlink_class'],
    'extLabel'            => Html::escape($settings['extlink_label']),
    'extImgClass'         => $settings['extlink_img_class'],
    'extSubdomains'       => $settings['extlink_subdomains'],
    'extExclude'          => $settings['extlink_exclude'],
    'extInclude'          => $settings['extlink_include'],
    'extCssExclude'       => $settings['extlink_css_exclude'],
    'extCssExplicit'      => $settings['extlink_css_explicit'],
    'extAlert'            => $settings['extlink_alert'],
    'extAlertText'        => $settings['extlink_alert_text'],
    'mailtoClass'         => $settings['extlink_mailto_class'],
    'mailtoLabel'         => Html::escape($settings['extlink_mailto_label']),
    'extUseFontAwesome'   => isset($settings['extlink_use_font_awesome']) ? $settings['extlink_use_font_awesome'] : FALSE,
    'extIconPlacement'    => !empty($settings['extlink_icon_placement']) ? $settings['extlink_icon_placement'] : 'append',
    'extFaLinkClasses'    => implode(' ', $fa_link_classes),
    'extFaMailtoClasses'  => implode(' ', $fa_mailto_classes),
    'whitelistedDomains'  => $config->get('whitelisted_domains'),
  ];
}
